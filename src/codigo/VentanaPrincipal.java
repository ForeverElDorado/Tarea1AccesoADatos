/* Tarea 1 de Acceso a Datos, tenemos que crear una interfaz que pueda crear archivos, leerlos y
    editarlos.  
 */
package codigo;

import java.awt.Frame;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;

/**
 *
 * @author aghsk
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nombreArchivoACrear = new javax.swing.JTextField();
        botonCrearArchivo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        nombreArchivoALeer = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        texto2 = new javax.swing.JTextPane();
        archivoAbiertoNombre = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nombreArchivoACrear.setName(""); // NOI18N

        botonCrearArchivo.setText("Crear Archivo");
        botonCrearArchivo.setActionCommand("Crear Archivo");
        botonCrearArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCrearArchivoActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre del Archivo:");

        jButton1.setLabel("Leer Archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        nombreArchivoALeer.setName(""); // NOI18N

        jLabel2.setText("Nombre del Archivo");

        archivoAbiertoNombre.setText("Ningun archivo abierto");

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAbrirArchivo(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Guardar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarCambios(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Guardar Como");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarComo(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nombreArchivoACrear, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonCrearArchivo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(archivoAbiertoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(texto2, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nombreArchivoALeer, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreArchivoACrear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonCrearArchivo)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(texto2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(archivoAbiertoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(nombreArchivoALeer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jLabel2.getAccessibleContext().setAccessibleName("");
        jLabel2.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCrearArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCrearArchivoActionPerformed
        //EN ESTE BOTON SE CREA EL ARCHIVO XML UNA VEZ SE ESCRIBE EN NOMBRE
        String nombre = nombreArchivoACrear.getText() + ".xml";
        
        try {
            File f = new File(nombre);
            if (!f.exists()) {
                BufferedWriter bw = new BufferedWriter(new FileWriter(nombre));
            } else {
                archivoAbiertoNombre.setText("ESE NOMBRE YA EXISTE");
            }

            /*
            bw.write("<prueba>");
            bw.newLine();
            bw.write("caca");
            bw.newLine();
            bw.write("caca2");
            bw.newLine();

            bw.write("</prueba>");
            bw.newLine();

            bw.close();*/
        } catch (IOException ex) {
            System.out.println("error");
        }
    }//GEN-LAST:event_botonCrearArchivoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //EN ESTE METODO SE LEE EL ARCHIVO QUE SE HA ESCRITO EN EL TEXT FIELD
        try {
            BufferedReader br = new BufferedReader(new FileReader(nombreArchivoALeer.getText() + ".xml"));
            
            String linea = br.readLine();
            String todo = "";
            while (linea != null) {
                todo = todo + linea + "\n";
                texto2.setText(todo);
                linea = br.readLine();
            }
            
        } catch (FileNotFoundException ex) {
            System.out.println("Fichero no encontrado");
        } catch (IOException ex) {
            System.out.println("Error");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BotonAbrirArchivo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAbrirArchivo
        JFileChooser abrirFile = new JFileChooser();
        int archSeleccionado = abrirFile.showOpenDialog(texto2);
        File f = abrirFile.getSelectedFile();
        if (archSeleccionado == abrirFile.APPROVE_OPTION) {
            //texto2.setText("Lo ha abierto");
            leerUnArchivoAlAbrirlo(f.getName());
            //Aqui guardamos el nombre del archivo para usarlo despues en Guardar.
            archivoAbiertoNombre.setText(f.getName());
        }
    }//GEN-LAST:event_BotonAbrirArchivo

    private void BotonGuardarCambios(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardarCambios
        //EN ESTE METODO SE LEE EL ARCHIVO QUE SE HA ESCRITO EN EL TEXT FIELD
        try {
            BufferedReader br = new BufferedReader(new FileReader(nombreArchivoALeer.getText() + ".xml"));
            
            String linea = br.readLine();
            String todo = "";
            while (linea != null) {
                todo = todo + linea + "\n";
                texto2.setText(todo);
                linea = br.readLine();
            }
            
        } catch (FileNotFoundException ex) {
            System.out.println("Fichero no encontrado");
        } catch (IOException ex) {
            System.out.println("Error");
        }
    }//GEN-LAST:event_BotonGuardarCambios

    private void BotonGuardarComo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardarComo
        //Este boton lee lo que hay escrito en el text area de la pantalla
        //y lo convierte en un archivo nuevo al pulsar el boton de guardar.
        //Metodo crea el archivo

        //Metodo lee el texto
        //Metodo escribe el texto

    }//GEN-LAST:event_BotonGuardarComo

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel archivoAbiertoNombre;
    private javax.swing.JButton botonCrearArchivo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JTextField nombreArchivoACrear;
    private javax.swing.JTextField nombreArchivoALeer;
    private javax.swing.JTextPane texto2;
    // End of variables declaration//GEN-END:variables

    private void leerUnArchivoAlAbrirlo(String nombre) {
        try {
            BufferedReader br = new BufferedReader(new FileReader(nombre));
            
            String linea = br.readLine();
            String todo = "";
            while (linea != null) {
                todo = todo + linea + "\n";
                texto2.setText(todo);
                linea = br.readLine();
            }
            
        } catch (FileNotFoundException ex) {
            System.out.println("Fichero no encontrado");
        } catch (IOException ex) {
            System.out.println("Error");
        }
    }
    
    private void abrirYLeerArchivo() {
        JFileChooser abrirFile = new JFileChooser();
        int archSeleccionado = abrirFile.showOpenDialog(texto2);
        File f = abrirFile.getSelectedFile();
        if (archSeleccionado == abrirFile.APPROVE_OPTION) {
            //texto2.setText("Lo ha abierto");
            leerUnArchivoAlAbrirlo(f.getName());
            //Aqui guardamos el nombre del archivo para usarlo despues en Guardar.
            archivoAbiertoNombre.setText(f.getName());
        }
    }
    
    private void editarTexto() {
        try {
            /*
            Este metodo lo que hace es coger el nombre del archivo abierto 
            de un Label previamente definido al abrir el archivo. Despues escribe en
            el archivo lo que el usuario haya escrito en el textPanel.
             */
            String f = archivoAbiertoNombre.getText();
            BufferedWriter bw = new BufferedWriter(new FileWriter(f));
            bw.write(texto2.getText());
            bw.close();
            
        } catch (IOException ex) {
            System.out.println("error");
        }
    }
}
